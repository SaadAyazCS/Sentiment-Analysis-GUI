Sentiment Analysis GUI üéØ

This is a sentiment analysis project built with Python, featuring a graphical user interface (GUI) using Tkinter. The tool allows users to train a sentiment classification model, predict sentiment from text or uploaded CSVs, and visualize performance metrics.

---

üìå Features

- Upload a CSV dataset with labeled sentiment data (text + label columns)
- Automatically detects relevant columns (text and sentiment/label)
- Trains a sentiment classifier using TF-IDF vectorization and LinearSVC
- Displays accuracy score and classification report
- Generates and saves visualizations (confusion matrix, accuracy chart)
- Predicts sentiment for:
  - Typed single input
  - Bulk input from CSV
- Validates inputs (empty/malformed entries handled)
- Saves predictions and charts to the user's Desktop

---

üöÄ How to Use

1. Upload Dataset 
   Click "Upload Dataset" and select a CSV file with two columns: one for text and one for labels (e.g., Positive/Negative/Neutral).

2. Train Model 
   Click "Train Model". The model will train using TF-IDF and LinearSVC. Accuracy, classification report, and charts will be generated and saved.

3. Single Prediction
   Enter a sentence in the input box and click "Predict Sentiment".

4. Bulk Prediction  
   Click "Predict File", select a CSV file containing text entries. The predictions will be saved to the Desktop.

5. Reset 
   Use the **"Reset"** button to clear inputs and reset the interface.

---

üõ†Ô∏è Libraries Used

- `pandas`, `numpy`  
- `matplotlib`, `seaborn`  
- `scikit-learn`  
- `vaderSentiment`  
- `tkinter` (GUI)  
- `PIL` (image handling)  

---

üí° Suggestions for Future Improvement

- Add progress bar for model training and predictions
- Implement model saving/loading (e.g., using `joblib`)
- Use ensemble models like VotingClassifier (SVC + NB + Logistic)
- Try deep learning models (e.g., BERT, RoBERTa)
- Expand to support non-English sentiment analysis

---

 üìÅ Files in This Repository

| File                          | Description                           |
|-------------------------------|---------------------------------------|
| `sentiment_gui.py`           | Main application file (GUI)           |
| `accuracy_chart.png`         | Accuracy comparison chart             |
| `confusion_matrix.png`       | Confusion matrix visualization        |
| `Prediction Output File.xlsx`| Output predictions from bulk testing  |
| `test_sentiments.xlsx`       | Sample test input file                |
| `Twitter_Data new.xlsx`      | Training dataset                      |
| `Dataset Source Link.pdf`    | Dataset source reference              |
| `README.md`                  | Project documentation                 |
| `requirements.txt`           | Required libraries                    |

---

üì¨ Contact

This project is part of my academic portfolio. Feel free to explore, fork, or reach out via GitHub if you have feedback or questions!

